2024.09.26 22:59:56.642449 [ 39 ] {} <Error> Access(user directories): from: 192.168.65.1, user: default: Authentication failed: Code: 195. DB::Exception: Connections from 192.168.65.1 are not allowed. (IP_ADDRESS_NOT_ALLOWED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0xda217e4 in /usr/bin/clickhouse
3. ./build/./src/Access/IAccessStorage.cpp:0: DB::IAccessStorage::throwAddressNotAllowed(Poco::Net::IPAddress const&) @ 0x16c1b3d2 in /usr/bin/clickhouse
4. ./build/./src/Access/IAccessStorage.cpp:490: DB::IAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1864c in /usr/bin/clickhouse
5. ./build/./src/Access/IAccessStorage.cpp:468: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1b342 in /usr/bin/clickhouse
6. ./build/./src/Access/MultipleAccessStorage.cpp:342: DB::MultipleAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c3cdd1 in /usr/bin/clickhouse
7. ./build/./src/Access/IAccessStorage.cpp:456: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool) const @ 0x16c1b30c in /usr/bin/clickhouse
8. ./build/./src/Access/AccessControl.cpp:559: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b74d62 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
11. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
14. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
17. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
18. ? @ 0x7f61f2294ac3 in ?
19. ? @ 0x7f61f2326850 in ?
 (version 23.3.2.1)
2024.09.26 22:59:56.656750 [ 39 ] {} <Error> DynamicQueryHandler: Code: 516. DB::Exception: default: Authentication failed: password is incorrect, or there is no user with such name.

If you have installed ClickHouse and forgot password you can reset it in the configuration file.
The password for default user is typically located at /etc/clickhouse-server/users.d/default-password.xml
and deleting this file will reset the password.
See also /etc/clickhouse-server/users.xml on the server where ClickHouse is installed.

. (AUTHENTICATION_FAILED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0xda3792c in /usr/bin/clickhouse
3. ./build/./src/Access/AccessControl.cpp:0: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b7501d in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
5. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
6. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
8. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
9. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
11. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
13. ? @ 0x7f61f2294ac3 in ?
14. ? @ 0x7f61f2326850 in ?
 (version 23.3.2.1)
2024.09.26 23:01:48.161328 [ 39 ] {} <Error> Access(user directories): from: 192.168.65.1, user: default: Authentication failed: Code: 195. DB::Exception: Connections from 192.168.65.1 are not allowed. (IP_ADDRESS_NOT_ALLOWED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0xda217e4 in /usr/bin/clickhouse
3. ./build/./src/Access/IAccessStorage.cpp:0: DB::IAccessStorage::throwAddressNotAllowed(Poco::Net::IPAddress const&) @ 0x16c1b3d2 in /usr/bin/clickhouse
4. ./build/./src/Access/IAccessStorage.cpp:490: DB::IAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1864c in /usr/bin/clickhouse
5. ./build/./src/Access/IAccessStorage.cpp:468: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1b342 in /usr/bin/clickhouse
6. ./build/./src/Access/MultipleAccessStorage.cpp:342: DB::MultipleAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c3cdd1 in /usr/bin/clickhouse
7. ./build/./src/Access/IAccessStorage.cpp:456: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool) const @ 0x16c1b30c in /usr/bin/clickhouse
8. ./build/./src/Access/AccessControl.cpp:559: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b74d62 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
11. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
14. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
17. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
18. ? @ 0x7f61f2294ac3 in ?
19. ? @ 0x7f61f2326850 in ?
 (version 23.3.2.1)
2024.09.26 23:01:48.171520 [ 39 ] {} <Error> DynamicQueryHandler: Code: 516. DB::Exception: default: Authentication failed: password is incorrect, or there is no user with such name.

If you have installed ClickHouse and forgot password you can reset it in the configuration file.
The password for default user is typically located at /etc/clickhouse-server/users.d/default-password.xml
and deleting this file will reset the password.
See also /etc/clickhouse-server/users.xml on the server where ClickHouse is installed.

. (AUTHENTICATION_FAILED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0xda3792c in /usr/bin/clickhouse
3. ./build/./src/Access/AccessControl.cpp:0: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b7501d in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
5. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
6. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
8. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
9. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
11. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
13. ? @ 0x7f61f2294ac3 in ?
14. ? @ 0x7f61f2326850 in ?
 (version 23.3.2.1)
2024.09.26 23:04:29.027271 [ 39 ] {} <Error> Access(user directories): from: 192.168.65.1, user: default: Authentication failed: Code: 195. DB::Exception: Connections from 192.168.65.1 are not allowed. (IP_ADDRESS_NOT_ALLOWED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0xda217e4 in /usr/bin/clickhouse
3. ./build/./src/Access/IAccessStorage.cpp:0: DB::IAccessStorage::throwAddressNotAllowed(Poco::Net::IPAddress const&) @ 0x16c1b3d2 in /usr/bin/clickhouse
4. ./build/./src/Access/IAccessStorage.cpp:490: DB::IAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1864c in /usr/bin/clickhouse
5. ./build/./src/Access/IAccessStorage.cpp:468: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1b342 in /usr/bin/clickhouse
6. ./build/./src/Access/MultipleAccessStorage.cpp:342: DB::MultipleAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c3cdd1 in /usr/bin/clickhouse
7. ./build/./src/Access/IAccessStorage.cpp:456: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool) const @ 0x16c1b30c in /usr/bin/clickhouse
8. ./build/./src/Access/AccessControl.cpp:559: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b74d62 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
11. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
14. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
17. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
18. ? @ 0x7fc8b5c94ac3 in ?
19. ? @ 0x7fc8b5d26850 in ?
 (version 23.3.2.1)
2024.09.26 23:04:29.046397 [ 39 ] {} <Error> DynamicQueryHandler: Code: 516. DB::Exception: default: Authentication failed: password is incorrect, or there is no user with such name.

If you have installed ClickHouse and forgot password you can reset it in the configuration file.
The password for default user is typically located at /etc/clickhouse-server/users.d/default-password.xml
and deleting this file will reset the password.
See also /etc/clickhouse-server/users.xml on the server where ClickHouse is installed.

. (AUTHENTICATION_FAILED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0xda3792c in /usr/bin/clickhouse
3. ./build/./src/Access/AccessControl.cpp:0: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b7501d in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
5. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
6. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
8. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
9. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
11. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
13. ? @ 0x7fc8b5c94ac3 in ?
14. ? @ 0x7fc8b5d26850 in ?
 (version 23.3.2.1)
2024.09.26 23:04:32.247685 [ 39 ] {} <Error> Access(user directories): from: 192.168.65.1, user: default: Authentication failed: Code: 195. DB::Exception: Connections from 192.168.65.1 are not allowed. (IP_ADDRESS_NOT_ALLOWED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0xda217e4 in /usr/bin/clickhouse
3. ./build/./src/Access/IAccessStorage.cpp:0: DB::IAccessStorage::throwAddressNotAllowed(Poco::Net::IPAddress const&) @ 0x16c1b3d2 in /usr/bin/clickhouse
4. ./build/./src/Access/IAccessStorage.cpp:490: DB::IAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1864c in /usr/bin/clickhouse
5. ./build/./src/Access/IAccessStorage.cpp:468: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1b342 in /usr/bin/clickhouse
6. ./build/./src/Access/MultipleAccessStorage.cpp:342: DB::MultipleAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c3cdd1 in /usr/bin/clickhouse
7. ./build/./src/Access/IAccessStorage.cpp:456: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool) const @ 0x16c1b30c in /usr/bin/clickhouse
8. ./build/./src/Access/AccessControl.cpp:559: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b74d62 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
11. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
14. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
17. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
18. ? @ 0x7fc8b5c94ac3 in ?
19. ? @ 0x7fc8b5d26850 in ?
 (version 23.3.2.1)
2024.09.26 23:04:32.249259 [ 39 ] {} <Error> DynamicQueryHandler: Code: 516. DB::Exception: default: Authentication failed: password is incorrect, or there is no user with such name.

If you have installed ClickHouse and forgot password you can reset it in the configuration file.
The password for default user is typically located at /etc/clickhouse-server/users.d/default-password.xml
and deleting this file will reset the password.
See also /etc/clickhouse-server/users.xml on the server where ClickHouse is installed.

. (AUTHENTICATION_FAILED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0xda3792c in /usr/bin/clickhouse
3. ./build/./src/Access/AccessControl.cpp:0: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b7501d in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
5. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
6. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
8. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
9. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
11. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
13. ? @ 0x7fc8b5c94ac3 in ?
14. ? @ 0x7fc8b5d26850 in ?
 (version 23.3.2.1)
2024.09.26 23:13:06.531109 [ 39 ] {} <Error> Access(user directories): from: 192.168.65.1, user: default: Authentication failed: Code: 195. DB::Exception: Connections from 192.168.65.1 are not allowed. (IP_ADDRESS_NOT_ALLOWED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception<String>(int, FormatStringHelperImpl<std::type_identity<String>::type>, String&&) @ 0xda217e4 in /usr/bin/clickhouse
3. ./build/./src/Access/IAccessStorage.cpp:0: DB::IAccessStorage::throwAddressNotAllowed(Poco::Net::IPAddress const&) @ 0x16c1b3d2 in /usr/bin/clickhouse
4. ./build/./src/Access/IAccessStorage.cpp:490: DB::IAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1864c in /usr/bin/clickhouse
5. ./build/./src/Access/IAccessStorage.cpp:468: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1b342 in /usr/bin/clickhouse
6. ./build/./src/Access/MultipleAccessStorage.cpp:342: DB::MultipleAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c3cdd1 in /usr/bin/clickhouse
7. ./build/./src/Access/IAccessStorage.cpp:456: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool) const @ 0x16c1b30c in /usr/bin/clickhouse
8. ./build/./src/Access/AccessControl.cpp:559: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b74d62 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
11. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
14. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
17. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
18. ? @ 0x7fc8b5c94ac3 in ?
19. ? @ 0x7fc8b5d26850 in ?
 (version 23.3.2.1)
2024.09.26 23:13:06.538506 [ 39 ] {} <Error> DynamicQueryHandler: Code: 516. DB::Exception: default: Authentication failed: password is incorrect, or there is no user with such name.

If you have installed ClickHouse and forgot password you can reset it in the configuration file.
The password for default user is typically located at /etc/clickhouse-server/users.d/default-password.xml
and deleting this file will reset the password.
See also /etc/clickhouse-server/users.xml on the server where ClickHouse is installed.

. (AUTHENTICATION_FAILED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0xda3792c in /usr/bin/clickhouse
3. ./build/./src/Access/AccessControl.cpp:0: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b7501d in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
5. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
6. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
8. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
9. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
11. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
13. ? @ 0x7fc8b5c94ac3 in ?
14. ? @ 0x7fc8b5d26850 in ?
 (version 23.3.2.1)
2024.09.26 23:15:52.565441 [ 39 ] {} <Error> Access(user directories): from: 192.168.65.1, user: default: Authentication failed: Code: 193. DB::Exception: Invalid credentials. (WRONG_PASSWORD), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception<char const (&) [20], void>(int, char const (&) [20]) @ 0xdd92f36 in /usr/bin/clickhouse
3. ./build/./src/Access/IAccessStorage.cpp:709: DB::IAccessStorage::throwInvalidCredentials() @ 0x16c1b5e4 in /usr/bin/clickhouse
4. ./build/./src/Access/IAccessStorage.cpp:0: DB::IAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c18656 in /usr/bin/clickhouse
5. ./build/./src/Access/IAccessStorage.cpp:468: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1b342 in /usr/bin/clickhouse
6. ./build/./src/Access/MultipleAccessStorage.cpp:342: DB::MultipleAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c3cdd1 in /usr/bin/clickhouse
7. ./build/./src/Access/IAccessStorage.cpp:456: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool) const @ 0x16c1b30c in /usr/bin/clickhouse
8. ./build/./src/Access/AccessControl.cpp:559: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b74d62 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
11. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
14. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
17. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
18. ? @ 0x7f2e3da94ac3 in ?
19. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:15:52.579849 [ 39 ] {} <Error> DynamicQueryHandler: Code: 516. DB::Exception: default: Authentication failed: password is incorrect, or there is no user with such name.

If you have installed ClickHouse and forgot password you can reset it in the configuration file.
The password for default user is typically located at /etc/clickhouse-server/users.d/default-password.xml
and deleting this file will reset the password.
See also /etc/clickhouse-server/users.xml on the server where ClickHouse is installed.

. (AUTHENTICATION_FAILED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0xda3792c in /usr/bin/clickhouse
3. ./build/./src/Access/AccessControl.cpp:0: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b7501d in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
5. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
6. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
8. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
9. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
11. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
13. ? @ 0x7f2e3da94ac3 in ?
14. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:17:42.503184 [ 39 ] {} <Error> Access(user directories): from: 192.168.65.1, user: default: Authentication failed: Code: 193. DB::Exception: Invalid credentials. (WRONG_PASSWORD), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception<char const (&) [20], void>(int, char const (&) [20]) @ 0xdd92f36 in /usr/bin/clickhouse
3. ./build/./src/Access/IAccessStorage.cpp:709: DB::IAccessStorage::throwInvalidCredentials() @ 0x16c1b5e4 in /usr/bin/clickhouse
4. ./build/./src/Access/IAccessStorage.cpp:0: DB::IAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c18656 in /usr/bin/clickhouse
5. ./build/./src/Access/IAccessStorage.cpp:468: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1b342 in /usr/bin/clickhouse
6. ./build/./src/Access/MultipleAccessStorage.cpp:342: DB::MultipleAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c3cdd1 in /usr/bin/clickhouse
7. ./build/./src/Access/IAccessStorage.cpp:456: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool) const @ 0x16c1b30c in /usr/bin/clickhouse
8. ./build/./src/Access/AccessControl.cpp:559: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b74d62 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
11. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
14. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
17. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
18. ? @ 0x7f2e3da94ac3 in ?
19. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:17:42.505311 [ 39 ] {} <Error> DynamicQueryHandler: Code: 516. DB::Exception: default: Authentication failed: password is incorrect, or there is no user with such name.

If you have installed ClickHouse and forgot password you can reset it in the configuration file.
The password for default user is typically located at /etc/clickhouse-server/users.d/default-password.xml
and deleting this file will reset the password.
See also /etc/clickhouse-server/users.xml on the server where ClickHouse is installed.

. (AUTHENTICATION_FAILED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0xda3792c in /usr/bin/clickhouse
3. ./build/./src/Access/AccessControl.cpp:0: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b7501d in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
5. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
6. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
8. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
9. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
11. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
13. ? @ 0x7f2e3da94ac3 in ?
14. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:18:36.658498 [ 39 ] {} <Error> Access(user directories): from: 192.168.65.1, user: default: Authentication failed: Code: 193. DB::Exception: Invalid credentials. (WRONG_PASSWORD), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception<char const (&) [20], void>(int, char const (&) [20]) @ 0xdd92f36 in /usr/bin/clickhouse
3. ./build/./src/Access/IAccessStorage.cpp:709: DB::IAccessStorage::throwInvalidCredentials() @ 0x16c1b5e4 in /usr/bin/clickhouse
4. ./build/./src/Access/IAccessStorage.cpp:0: DB::IAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c18656 in /usr/bin/clickhouse
5. ./build/./src/Access/IAccessStorage.cpp:468: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c1b342 in /usr/bin/clickhouse
6. ./build/./src/Access/MultipleAccessStorage.cpp:342: DB::MultipleAccessStorage::authenticateImpl(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool, bool) const @ 0x16c3cdd1 in /usr/bin/clickhouse
7. ./build/./src/Access/IAccessStorage.cpp:456: DB::IAccessStorage::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&, DB::ExternalAuthenticators const&, bool, bool) const @ 0x16c1b30c in /usr/bin/clickhouse
8. ./build/./src/Access/AccessControl.cpp:559: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b74d62 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
11. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
14. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
17. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
18. ? @ 0x7f2e3da94ac3 in ?
19. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:18:36.661776 [ 39 ] {} <Error> DynamicQueryHandler: Code: 516. DB::Exception: default: Authentication failed: password is incorrect, or there is no user with such name.

If you have installed ClickHouse and forgot password you can reset it in the configuration file.
The password for default user is typically located at /etc/clickhouse-server/users.d/default-password.xml
and deleting this file will reset the password.
See also /etc/clickhouse-server/users.xml on the server where ClickHouse is installed.

. (AUTHENTICATION_FAILED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. DB::Exception::Exception(PreformattedMessage&&, int) @ 0xda3792c in /usr/bin/clickhouse
3. ./build/./src/Access/AccessControl.cpp:0: DB::AccessControl::authenticate(DB::Credentials const&, Poco::Net::IPAddress const&) const @ 0x16b7501d in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::Session::authenticate(DB::Credentials const&, Poco::Net::SocketAddress const&) @ 0x17d8d042 in /usr/bin/clickhouse
5. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::HTTPHandler::authenticateUser(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&) @ 0x18c45f2e in /usr/bin/clickhouse
6. ./build/./src/Server/HTTPHandler.cpp:544: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c47815 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
8. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
9. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
11. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
13. ? @ 0x7f2e3da94ac3 in ?
14. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:18:57.819959 [ 39 ] {25fd30d8-abc9-474f-b3a4-5f189c844917} <Error> executeQuery: std::exception. Code: 1001, type: SearchIndexException, e.what() = Error(BAD_ARGUMENTS): Unknown index type for Float32 Vector: MSTG (version 23.3.2.1) (from 192.168.65.1:31275) (in query:  ALTER TABLE default.test ADD VECTOR INDEX vector_index embeddings TYPE MSTG ), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: SearchIndexException::SearchIndexException(Search::ErrorCode, String const&) @ 0x19186c55 in /usr/bin/clickhouse
1. ./build/./contrib/search-index/SearchIndex/VectorSearch.cpp:92: Search::getVectorIndexType(String, Search::DataType const&) @ 0x1ca07ed1 in /usr/bin/clickhouse
2. ./build/./src/VectorIndex/Storages/VIDescriptions.cpp:0: DB::VIDescription::getVectorIndexFromAST(std::shared_ptr<DB::IAST> const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) @ 0x19243052 in /usr/bin/clickhouse
3. ./build/./src/Storages/AlterCommands.cpp:0: DB::AlterCommand::apply(DB::StorageInMemoryMetadata&, std::shared_ptr<DB::Context const>) const @ 0x182a97f3 in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/__iterator/wrap_iter.h:100: DB::AlterCommands::apply(DB::StorageInMemoryMetadata&, std::shared_ptr<DB::Context const>) const @ 0x182acb6e in /usr/bin/clickhouse
5. ./build/./src/Storages/MergeTree/MergeTreeData.cpp:0: DB::MergeTreeData::checkAlterIsPossible(DB::AlterCommands const&, std::shared_ptr<DB::Context const>) const @ 0x18836d1b in /usr/bin/clickhouse
6. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:1645: DB::InterpreterAlterQuery::executeToTable(DB::ASTAlterQuery&) @ 0x17b0ec20 in /usr/bin/clickhouse
7. ./build/./src/Interpreters/InterpreterAlterQuery.cpp:67: DB::InterpreterAlterQuery::execute() @ 0x17b0b030 in /usr/bin/clickhouse
8. ./build/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x17f5dd65 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, std::optional<DB::FormatSettings> const&) @ 0x17f6a022 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/optional:260: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c4a8e0 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
13. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
15. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
17. ? @ 0x7f2e3da94ac3 in ?
18. ? @ 0x7f2e3db26850 in ?

2024.09.26 23:18:57.821568 [ 39 ] {25fd30d8-abc9-474f-b3a4-5f189c844917} <Error> DynamicQueryHandler: std::exception. Code: 1001, type: SearchIndexException, e.what() = Error(BAD_ARGUMENTS): Unknown index type for Float32 Vector: MSTG, Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: SearchIndexException::SearchIndexException(Search::ErrorCode, String const&) @ 0x19186c55 in /usr/bin/clickhouse
1. ./build/./contrib/search-index/SearchIndex/VectorSearch.cpp:92: Search::getVectorIndexType(String, Search::DataType const&) @ 0x1ca07ed1 in /usr/bin/clickhouse
2. ./build/./src/VectorIndex/Storages/VIDescriptions.cpp:0: DB::VIDescription::getVectorIndexFromAST(std::shared_ptr<DB::IAST> const&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) @ 0x19243052 in /usr/bin/clickhouse
3. ./build/./src/Storages/AlterCommands.cpp:0: DB::AlterCommand::apply(DB::StorageInMemoryMetadata&, std::shared_ptr<DB::Context const>) const @ 0x182a97f3 in /usr/bin/clickhouse
4. ./build/./contrib/llvm-project/libcxx/include/__iterator/wrap_iter.h:100: DB::AlterCommands::apply(DB::StorageInMemoryMetadata&, std::shared_ptr<DB::Context const>) const @ 0x182acb6e in /usr/bin/clickhouse
5. ./build/./src/Storages/MergeTree/MergeTreeData.cpp:0: DB::MergeTreeData::checkAlterIsPossible(DB::AlterCommands const&, std::shared_ptr<DB::Context const>) const @ 0x18836d1b in /usr/bin/clickhouse
6. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:1645: DB::InterpreterAlterQuery::executeToTable(DB::ASTAlterQuery&) @ 0x17b0ec20 in /usr/bin/clickhouse
7. ./build/./src/Interpreters/InterpreterAlterQuery.cpp:67: DB::InterpreterAlterQuery::execute() @ 0x17b0b030 in /usr/bin/clickhouse
8. ./build/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x17f5dd65 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, std::optional<DB::FormatSettings> const&) @ 0x17f6a022 in /usr/bin/clickhouse
10. ./build/./contrib/llvm-project/libcxx/include/optional:260: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c4a8e0 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
12. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
13. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
15. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
16. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
17. ? @ 0x7f2e3da94ac3 in ?
18. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:20:23.267009 [ 39 ] {68d13f5d-c0bf-45a0-ac23-54615aa55673} <Error> executeQuery: Code: 57. DB::Exception: Table default.test already exists. (TABLE_ALREADY_EXISTS) (version 23.3.2.1) (from 192.168.65.1:57082) (in query:  CREATE TABLE default.test ( id Int64, page_content String, embeddings Array(Float32), CONSTRAINT check_data_length CHECK length(embeddings) = 768 ) ENGINE = MergeTree() ORDER BY id ), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<String&, String, String>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type>, String&, String&&, String&&) @ 0x15168440 in /usr/bin/clickhouse
3. ./build/./src/Interpreters/InterpreterCreateQuery.cpp:0: DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::unique_ptr<DB::DDLGuard, std::default_delete<DB::DDLGuard>>&) @ 0x17a961cb in /usr/bin/clickhouse
4. ./build/./src/Interpreters/InterpreterCreateQuery.cpp:0: DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x17a90402 in /usr/bin/clickhouse
5. ./build/./src/Interpreters/InterpreterCreateQuery.cpp:1819: DB::InterpreterCreateQuery::execute() @ 0x17a7ddc1 in /usr/bin/clickhouse
6. ./build/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x17f5dd65 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, std::optional<DB::FormatSettings> const&) @ 0x17f6a022 in /usr/bin/clickhouse
8. ./build/./contrib/llvm-project/libcxx/include/optional:260: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c4a8e0 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
10. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
11. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
14. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
15. ? @ 0x7f2e3da94ac3 in ?
16. ? @ 0x7f2e3db26850 in ?

2024.09.26 23:20:23.269632 [ 39 ] {68d13f5d-c0bf-45a0-ac23-54615aa55673} <Error> DynamicQueryHandler: Code: 57. DB::Exception: Table default.test already exists. (TABLE_ALREADY_EXISTS), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<String&, String, String>(int, FormatStringHelperImpl<std::type_identity<String&>::type, std::type_identity<String>::type, std::type_identity<String>::type>, String&, String&&, String&&) @ 0x15168440 in /usr/bin/clickhouse
3. ./build/./src/Interpreters/InterpreterCreateQuery.cpp:0: DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&, std::unique_ptr<DB::DDLGuard, std::default_delete<DB::DDLGuard>>&) @ 0x17a961cb in /usr/bin/clickhouse
4. ./build/./src/Interpreters/InterpreterCreateQuery.cpp:0: DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0x17a90402 in /usr/bin/clickhouse
5. ./build/./src/Interpreters/InterpreterCreateQuery.cpp:1819: DB::InterpreterCreateQuery::execute() @ 0x17a7ddc1 in /usr/bin/clickhouse
6. ./build/./src/Interpreters/executeQuery.cpp:0: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x17f5dd65 in /usr/bin/clickhouse
7. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, std::optional<DB::FormatSettings> const&) @ 0x17f6a022 in /usr/bin/clickhouse
8. ./build/./contrib/llvm-project/libcxx/include/optional:260: DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&) @ 0x18c4a8e0 in /usr/bin/clickhouse
9. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:290: DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&) @ 0x18c4253c in /usr/bin/clickhouse
10. ./build/./base/poco/Foundation/include/Poco/AutoPtr.h:205: DB::HTTPServerConnection::run() @ 0x18ca9b00 in /usr/bin/clickhouse
11. ./build/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1baf0447 in /usr/bin/clickhouse
12. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x1baf066d in /usr/bin/clickhouse
13. ./build/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x1bc8aac7 in /usr/bin/clickhouse
14. ./build/./base/poco/Foundation/include/Poco/SharedPtr.h:139: Poco::ThreadImpl::runnableEntry(void*) @ 0x1bc88f63 in /usr/bin/clickhouse
15. ? @ 0x7f2e3da94ac3 in ?
16. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:35:56.151669 [ 239 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.83 GiB (attempt to allocate chunk of 4360464 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:38:26.715539 [ 228 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.84 GiB (attempt to allocate chunk of 4360416 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:40:57.925818 [ 232 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.83 GiB (attempt to allocate chunk of 4360448 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:45:21.706113 [ 234 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.82 GiB (attempt to allocate chunk of 4360368 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:49:45.718195 [ 234 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.83 GiB (attempt to allocate chunk of 4360336 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:50:23.643046 [ 224 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.84 GiB (attempt to allocate chunk of 4360272 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:52:16.751088 [ 230 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.85 GiB (attempt to allocate chunk of 4360368 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:57:18.857982 [ 233 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.83 GiB (attempt to allocate chunk of 4360448 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.26 23:59:50.302134 [ 228 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.82 GiB (attempt to allocate chunk of 4360448 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.27 00:02:20.581044 [ 233 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.82 GiB (attempt to allocate chunk of 4360336 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.27 00:04:13.663940 [ 233 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.81 GiB (attempt to allocate chunk of 4360272 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.27 00:09:53.716312 [ 239 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.82 GiB (attempt to allocate chunk of 4360368 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.27 00:12:24.603571 [ 233 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.82 GiB (attempt to allocate chunk of 4360304 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.27 00:14:55.953489 [ 230 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.83 GiB (attempt to allocate chunk of 4360368 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.27 00:15:33.742271 [ 231 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.90 GiB (attempt to allocate chunk of 4360416 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.27 02:05:52.753103 [ 224 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.84 GiB (attempt to allocate chunk of 4360464 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. ./build/./src/IO/BufferWithOwnMemory.h:130: DB::Memory<Allocator<false, false>>::alloc(unsigned long) @ 0x1278cf48 in /usr/bin/clickhouse
9. ./build/./src/IO/BufferWithOwnMemory.h:159: DB::CompressedWriteBuffer::CompressedWriteBuffer(DB::WriteBuffer&, std::shared_ptr<DB::ICompressionCodec>, unsigned long) @ 0x16f2c495 in /usr/bin/clickhouse
10. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterOnDisk.cpp:70: DB::MergeTreeDataPartWriterOnDisk::Stream::Stream(String const&, std::shared_ptr<DB::IDataPartStorage> const&, String const&, String const&, String const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, std::shared_ptr<DB::ICompressionCodec> const&, unsigned long, DB::WriteSettings const&) @ 0x188f4251 in /usr/bin/clickhouse
11. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::MergeTreeDataPartWriterOnDisk::Stream>::__unique_single std::make_unique[abi:v15000]<DB::MergeTreeDataPartWriterOnDisk::Stream, String&, std::shared_ptr<DB::IDataPartStorage>, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&>(String&, std::shared_ptr<DB::IDataPartStorage>&&, String&, char const* const&, String&, String const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, std::shared_ptr<DB::ICompressionCodec>&, unsigned long const&, DB::WriteSettings const&) @ 0x1890269f in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeDataPartWriterWide.cpp:119: void std::__function::__policy_invoker<void (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&)::$_0, void (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x188fd799 in /usr/bin/clickhouse
13. ./build/./contrib/llvm-project/libcxx/include/vector:1613: DB::ISerialization::enumerateStreams(DB::ISerialization::EnumerateStreamsSettings&, std::function<void (DB::ISerialization::SubstreamPath const&)> const&, DB::ISerialization::SubstreamData const&) const @ 0x1709e030 in /usr/bin/clickhouse
14. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::ISerialization::enumerateStreams(std::function<void (DB::ISerialization::SubstreamPath const&)> const&, std::shared_ptr<DB::IDataType const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn> const&) const @ 0x1709ebf6 in /usr/bin/clickhouse
15. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:98: DB::MergeTreeDataPartWriterWide::addStreams(DB::NameAndTypePair const&, std::shared_ptr<DB::IAST> const&) @ 0x188fd347 in /usr/bin/clickhouse
16. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeDataPartWriterWide::MergeTreeDataPartWriterWide(std::shared_ptr<DB::IMergeTreeDataPart> const&, DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, String const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188fd20d in /usr/bin/clickhouse
17. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: DB::MergeTreeDataPartWide::getWriter(DB::NamesAndTypesList const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec> const&, DB::MergeTreeWriterSettings const&, DB::MergeTreeIndexGranularity const&) @ 0x188e7d5d in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::MergedBlockOutputStream::MergedBlockOutputStream(std::shared_ptr<DB::IMergeTreeDataPart> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::IMergeTreeIndex const>, std::allocator<std::shared_ptr<DB::IMergeTreeIndex const>>> const&, std::shared_ptr<DB::ICompressionCodec>, std::shared_ptr<DB::MergeTreeTransaction> const&, bool, bool, DB::WriteSettings const&) @ 0x18a361b5 in /usr/bin/clickhouse
19. ./build/./contrib/llvm-project/libcxx/include/__memory/construct_at.h:0: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::prepare() @ 0x1880e0d3 in /usr/bin/clickhouse
20. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:716: bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::ExecuteAndFinalizeHorizontalPart::subtasks::'lambda'(), bool ()>>(std::__function::__policy_storage const*) @ 0x18822ac9 in /usr/bin/clickhouse
21. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
22. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
25. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
26. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
27. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
28. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
29. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
30. ? @ 0x7f2e3da94ac3 in ?
31. ? @ 0x7f2e3db26850 in ?
 (version 23.3.2.1)
2024.09.27 09:03:35.098362 [ 234 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 241. DB::Exception: Memory limit (total) exceeded: would use 1.88 GiB (attempt to allocate chunk of 4222641 bytes), maximum: 1.80 GiB. OvercommitTracker decision: Memory overcommit isn't used. Waiting time or overcommit denominator are set to zero.: (while reading column ProfileEvent_NetworkSendBytes): (while reading from part /var/lib/clickhouse/store/a51/a51efc65-fc44-4803-9d0c-ce07f9ff06af/202409_1_2273_427/ from mark 0 with max_rows_to_read = 2114): While executing MergeTreeSequentialSource. (MEMORY_LIMIT_EXCEEDED), Stack trace (when copying this message, always include the lines below):

0. ./build/./contrib/llvm-project/libcxx/include/exception:134: Poco::Exception::Exception(String const&, int) @ 0x1bc30d93 in /usr/bin/clickhouse
1. ./build/./src/Common/Exception.cpp:91: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x12743e35 in /usr/bin/clickhouse
2. ./build/./contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception<char const*, char const*, String, long&, String, char const*, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<char const*>::type, std::type_identity<char const*>::type, std::type_identity<String>::type, std::type_identity<long&>::type, std::type_identity<String>::type, std::type_identity<char const*>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, char const*&&, char const*&&, String&&, long&, String&&, char const*&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x1274ea78 in /usr/bin/clickhouse
3. ./build/./src/Common/MemoryTracker.cpp:0: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274de32 in /usr/bin/clickhouse
4. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
5. ./build/./src/Common/MemoryTracker.cpp:338: MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0x1274d979 in /usr/bin/clickhouse
6. ./build/./src/Common/CurrentMemoryTracker.cpp:59: CurrentMemoryTracker::alloc(long) @ 0x1271af75 in /usr/bin/clickhouse
7. ./build/./src/Common/Allocator.h:103: Allocator<false, false>::alloc(unsigned long, unsigned long) @ 0x12717fc4 in /usr/bin/clickhouse
8. void DB::PODArrayBase<8ul, 4096ul, Allocator<false, false>, 63ul, 64ul>::resize<>(unsigned long) @ 0xda23ab8 in /usr/bin/clickhouse
9. ./build/./src/Common/PODArray.h:389: DB::SerializationNumber<unsigned long>::deserializeBinaryBulk(DB::IColumn&, DB::ReadBuffer&, unsigned long, double) const @ 0x170ce4bb in /usr/bin/clickhouse
10. ./build/./contrib/boost/boost/smart_ptr/intrusive_ptr.hpp:209: DB::ISerialization::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>*) const @ 0x1709e16b in /usr/bin/clickhouse
11. ./build/./src/Storages/MergeTree/MergeTreeReaderWide.cpp:0: DB::MergeTreeReaderWide::readData(DB::NameAndTypePair const&, std::shared_ptr<DB::ISerialization const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, bool, unsigned long, unsigned long, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>&, bool) @ 0x189e4120 in /usr/bin/clickhouse
12. ./build/./src/Storages/MergeTree/MergeTreeReaderWide.cpp:157: DB::MergeTreeReaderWide::readRows(unsigned long, unsigned long, bool, unsigned long, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&) @ 0x189e2d93 in /usr/bin/clickhouse
13. ./build/./src/Storages/MergeTree/MergeTreeSequentialSource.cpp:182: DB::MergeTreeSequentialSource::generate() @ 0x189e7608 in /usr/bin/clickhouse
14. ./build/./src/Processors/Chunk.h:90: DB::ISource::tryGenerate() @ 0x18cd2395 in /usr/bin/clickhouse
15. ./build/./contrib/llvm-project/libcxx/include/optional:344: DB::ISource::work() @ 0x18cd1ec5 in /usr/bin/clickhouse
16. ./build/./src/Processors/Executors/ExecutionThreadContext.cpp:0: DB::ExecutionThreadContext::executeTask() @ 0x18ce950c in /usr/bin/clickhouse
17. ./build/./src/Processors/Executors/PipelineExecutor.cpp:248: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x18cdfd7b in /usr/bin/clickhouse
18. ./build/./contrib/llvm-project/libcxx/include/atomic:958: DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x18cdf8a9 in /usr/bin/clickhouse
19. ./build/./src/Processors/Executors/PullingPipelineExecutor.cpp:54: DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x18cecf48 in /usr/bin/clickhouse
20. ./build/./src/Processors/Executors/PullingPipelineExecutor.cpp:0: DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x18ced130 in /usr/bin/clickhouse
21. ./build/./src/Storages/MergeTree/MergeTask.cpp:521: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x18811eb4 in /usr/bin/clickhouse
22. ./build/./contrib/llvm-project/libcxx/include/__functional/function.h:848: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x1880974b in /usr/bin/clickhouse
23. ./build/./src/Storages/MergeTree/MergeTask.cpp:0: DB::MergeTask::execute() @ 0x1881bdfa in /usr/bin/clickhouse
24. ./build/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:0: DB::MergePlainMergeTreeTask::executeStep() @ 0x18b6edff in /usr/bin/clickhouse
25. ./build/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:137: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x1883145b in /usr/bin/clickhouse
26. ./build/./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x188310ca in /usr/bin/clickhouse
27. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x128029ae in /usr/bin/clickhouse
28. ./build/./src/Common/ThreadPool.cpp:0: ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x128025bc in /usr/bin/clickhouse
29. ./build/./base/base/../base/wide_integer_impl.h:789: ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0x127fed2d in /usr/bin/clickhouse
30. ./build/./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x127fe8ae in /usr/bin/clickhouse
31. ? @ 0x7f2e3da94ac3 in ?
 (version 23.3.2.1)
